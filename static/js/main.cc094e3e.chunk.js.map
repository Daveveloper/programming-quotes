{"version":3,"sources":["hero.svg","components/footer.js","components/Title.js","components/Quote.js","api/api.js","components/Hero.js","components/Menu.js","container/Main.js","container/Favorites.js","container/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","size","color","Title","title","Quote","data","en","author","_id","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","style","API_BASE","RANDOM_QUOTE","getRandomQuote","a","fetch","response","json","quote","Hero","src","logo","alt","Menu","path","to","Main","props","generateRandomQuote","setState","state","this","console","log","match","type","onClick","Component","fav","id","Favorites","Router","exact","component","App","Boolean","window","location","hostname","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc094e3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.34bccda5.svg\";","import React from 'react'\nimport {FaReact} from 'react-icons/fa'\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <section>\n        <h3>About this App</h3>\n        <p>Developed with React.js</p>\n        <p><span>API:</span> https://programming-quotes-api.herokuapp.com/</p>\n        <address>\n          <p><span>Developer:</span> Dave Araya</p>\n          <p><span>Email:</span> dave.webdeveloper@gmail.com</p>\n        </address>\n      </section>\n      <div className=\"logos\">\n        <FaReact size={48} color=\"darkturquoise\"/>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Title = ({title}) => {\n  return (\n    <div className=\"header\">\n      <h1 className=\"title\">\n        {title}\n      </h1>\n      <small className=\"designer\">By Dave Araya</small>\n    </div>\n  )\n}\n\nexport default Title\n","import React from 'react'\n\timport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nconst Quote = ({data:{en, author, _id}}) => {\n\n\n  return (\n    <div className=\"quote\">\n      {\n        en ?\n        <ReactCSSTransitionGroup transitionName=\"anim\" transitionAppear={true} transitionAppearTimeout={3000} transitionEnter={false} transitionLeave={false}>\n          <cite className=\"quote__cite\">\n            <span className=\"quote__symbol\">\"</span>{en}\n          </cite>\n          <p className=\"quote__author\">- {author}</p>\n          <span style={{\"display\": \"none\"}}>{_id}</span>\n        </ReactCSSTransitionGroup>\n        :\n        \"Thinking...\"\n      }\n    </div>\n  )\n}\n\nexport default Quote;\n","const API_BASE = 'https://programming-quotes-api.herokuapp.com';\nconst ALL_QUOTES = `${API_BASE}/quotes`;\nconst RANDOM_QUOTE = `${API_BASE}/quotes/random`;\n\nexport async function getAll() {\n  const response = await fetch(ALL_QUOTES);\n  const quotes = await response.json();\n  return quotes;\n}\n\nexport async function getRandomQuote() {\n  const response =  await fetch(RANDOM_QUOTE);\n  const quote = await response.json();\n  return quote;\n}\n","import React from 'react'\nimport logo from './../hero.svg';\n\nconst Hero = () => {\n  return (\n    <picture className=\"hero\">\n      <img src={logo} alt=\"programmer\"/>\n    </picture>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport {FaHeart, FaHome} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst Menu = ({path}) => {\n\n  return (\n    <nav className=\"Menu\">\n      <ul className=\"Menu-list\">\n        <li className={\"Menu-item\"} >\n          <Link to=\"/\">\n            <FaHome className=\"svg\" color=\"white\"/> Home\n          </Link>\n        </li>\n        <li className=\"Menu-item\">\n          <Link to=\"/favorites\">\n            <FaHeart className=\"svg\" color=\"red\"/> Favorites\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Menu\n","import React, { Component } from 'react'\nimport Title from '../components/Title'\nimport Quote from '../components/Quote'\nimport { getRandomQuote } from '../api/api';\nimport Hero from '../components/Hero';\nimport {TiRefresh} from 'react-icons/ti';\nimport Menu from '../components/Menu';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    }\n  }\n\n   generateRandomQuote = async () => {\n    const data = await getRandomQuote();\n    this.setState({\n      data\n    })\n  }\n\n  componentDidMount() {\n    this.generateRandomQuote();\n  }\n\n  render() {\n    console.log(this.props.match);\n    const {data} = this.state;\n    return (\n      <main className=\"Main\">\n        <Menu path={this.props.match.path}/>\n        <Hero/>\n        <Title title=\"Programming Quote\" />\n        {\n          data ?\n          <>\n            <Quote data={data}/>\n          </>\n          : \"Thinking...\"\n        }\n        <div className=\"actions\">\n          <button type=\"button\" className=\"Main__button-generate\" onClick={this.generateRandomQuote}><TiRefresh size={32}/> Random quote</button>\n        </div>\n      </main>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport Quote from '../components/Quote'\nimport Menu from '../components/Menu';\n\nconst fav = {\n  en: \"Something went wrong, try again... or restart.\",\n  author: \"All IT professionals\",\n  id: 12314\n}\n\n\nconst Favorites = () => {\n  return (\n    <section className=\"favorites\">\n      <Menu/>\n      <h1 className=\"favorites__title\">Favorites</h1>\n      <div className=\"favorites__panel\">\n        <Quote data={fav}/>\n        <Quote data={fav}/>\n      </div>\n    </section>\n  )\n}\n\nexport default Favorites;\n\n\n// Agregar react-router. listo\n// Crear el componente que tendra las rutas.\n// Agregar Firebase para almacenar los quotes favoritos.\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom';\nimport Main from './Main';\nimport Favorites from './Favorites';\nimport Home from './Home';\n\nconst Router = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Main}/>\n        <Route path=\"/favorites\" component={Favorites}/>\n      </Switch>\n    </>\n  )\n}\n\nexport default Router\n","import React from 'react';\nimport Footer from './components/footer';\nimport './App.css';\nimport Router from './container/Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n<Router basename=\"/\">\n  <App />\n</Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}